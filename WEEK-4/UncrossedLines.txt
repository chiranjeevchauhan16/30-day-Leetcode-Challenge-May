class Solution {
    public int maxUncrossedLines(int[] A, int[] B) {
        
//         int[][] dp=new int[A.length][B.length];
//         for(int i=0;i<A.length;i++){
//             for(int j=0;j<B.length;j++)
//                 dp[i][j]=-1;
            
//         }
        
        int m=A.length, n=B.length;
        if (m==0 || n==0)   return 0;
        int[][]dp = new int[m+1][n+1];
        
        for (int i=1; i<=m; i++){
            for (int j=1; j<=n; j++){
                if (A[i-1]==B[j-1]){
                    dp[i][j]=dp[i-1][j-1]+1;
                }
                else
                    dp[i][j]=Math.max(dp[i-1][j], dp[i][j-1]);
            }
        }
        return dp[m][n];
      //  return lcs(A,B,0,0,dp);
    }
    
    
    public int lcs(int[] A,int[] B,int i,int j,int[][] dp){
        
        if(i==A.length || j==B.length)
            return 0;
        
        if(dp[i][j]!=-1)
            return dp[i][j];
        
        
        if(A[i]==B[j])
            return dp[i][j]= lcs(A,B,i+1,j+1,dp) +1;
        
        else{
            return dp[i][j]=Math.max(lcs(A,B,i+1,j,dp),lcs(A,B,i,j+1,dp));
        }
    }
    
    
    
}